environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\B M4ST3R\\AppData\\Roaming', 'CLIENTNAME': 'Brendans-MacBoo', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'BRENDANPC1', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\B M4ST3R', 'LOCALAPPDATA': 'C:\\Users\\B M4ST3R\\AppData\\Local', 'LOGONSERVER': '\\\\BRENDANPC1', 'NUMBER_OF_PROCESSORS': '12', 'ONEDRIVE': 'C:\\Users\\B M4ST3R\\OneDrive', 'ONEDRIVECONSUMER': 'C:\\Users\\B M4ST3R\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\Users\\B M4ST3R\\PycharmProjects\\BHP\\venv\\Scripts;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Users\\B M4ST3R\\Appdata\\local\\programs\\python\\python36;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Users\\B M4ST3R\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\B M4ST3R\\PycharmProjects\\BHP\\venv\\Scripts;C:\\Users\\B M4ST3R\\AppData\\Local\\Microsoft\\WindowsApps;;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2019.1.2\\bin;;C:\\Users\\B M4ST3R\\PycharmProjects\\BHP\\venv\\lib\\site-packages\\pywin32_system32;C:\\Users\\B M4ST3R\\PycharmProjects\\BHP\\venv\\lib\\site-packages\\pywin32_system32', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 158 Stepping 10, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '9e0a', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PROMPT': '(venv) $P$G', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PUBLIC': 'C:\\Users\\Public', 'PYCHARM COMMUNITY EDITION': 'C:\\Program Files\\JetBrains\\PyCharm Community Edition 2019.1.2\\bin;', 'PYCHARM_HOSTED': '1', 'PYTHON': 'C:\\users\\C:\\Windows\\system32\\config\\systemprofile\\Appdata\\local\\programs\\python\\python36\\python.exe', 'PYTHONIOENCODING': 'UTF-8', 'PYTHONPATH': 'C:\\Users\\B M4ST3R\\PycharmProjects\\BHP', 'PYTHONUNBUFFERED': '1', 'SESSIONNAME': 'RDP-Tcp#0', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\Windows', 'TEMP': 'C:\\Users\\BM4ST3~1\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\BM4ST3~1\\AppData\\Local\\Temp', 'USERDOMAIN': 'BRENDANPC1', 'USERDOMAIN_ROAMINGPROFILE': 'BRENDANPC1', 'USERNAME': 'Brendan', 'USERPROFILE': 'C:\\Users\\B M4ST3R', 'VIRTUAL_ENV': 'C:\\Users\\B M4ST3R\\PycharmProjects\\BHP\\venv', 'WINDIR': 'C:\\Windows', '_OLD_VIRTUAL_PATH': 'C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Users\\B M4ST3R\\Appdata\\local\\programs\\python\\python36;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Users\\B M4ST3R\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\B M4ST3R\\PycharmProjects\\BHP\\venv\\Scripts;C:\\Users\\B M4ST3R\\AppData\\Local\\Microsoft\\WindowsApps;;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2019.1.2\\bin;', '_OLD_VIRTUAL_PROMPT': '$P$G'})