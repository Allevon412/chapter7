environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\bortiz\\AppData\\Roaming', 'COMMONPROGRAMFILES': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'PROSOC-23', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\bortiz', 'IDE_PROJECT_ROOTS': 'C:/Users/bortiz/ProCloud/CloudStation/BHP', 'IPYTHONENABLE': 'True', 'LIBRARY_ROOTS': 'C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32/DLLs;C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32/Lib;C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32;C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32/Lib/site-packages;C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32/Lib/site-packages/win32;C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32/Lib/site-packages/win32/lib;C:/Users/bortiz/AppData/Local/Programs/Python/Python37-32/Lib/site-packages/pythonwin;C:/Users/bortiz/.PyCharmCE2018.3/system/python_stubs/-1904847858;C:/Program Files/JetBrains/PyCharm Community Edition 2018.3.5/helpers/python-skeletons;C:/Program Files/JetBrains/PyCharm Community Edition 2018.3.5/helpers/typeshed/stdlib/3;C:/Program Files/JetBrains/PyCharm Community Edition 2018.3.5/helpers/typeshed/stdlib/2and3;C:/Program Files/JetBrains/PyCharm Community Edition 2018.3.5/helpers/typeshed/third_party/3;C:/Program Files/JetBrains/PyCharm Community Edition 2018.3.5/helpers/typeshed/third_party/2and3', 'LOCALAPPDATA': 'C:\\Users\\bortiz\\AppData\\Local', 'LOGONSERVER': '\\\\SD-DC1', 'NUMBER_OF_PROCESSORS': '8', 'ONEDRIVE': 'C:\\Users\\bortiz\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\PuTTY\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Users\\bortiz\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\bortiz\\AppData\\Local\\atom\\bin;C:\\Users\\bortiz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pywin32_system32', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'x86', 'PROCESSOR_ARCHITEW6432': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 58 Stepping 9, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '3a09', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files (x86)', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PUBLIC': 'C:\\Users\\Public', 'PYCHARM_HOSTED': '1', 'PYDEVD_LOAD_VALUES_ASYNC': 'True', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHONIOENCODING': 'UTF-8', 'PYTHONPATH': 'C:\\Users\\bortiz\\ProCloud\\CloudStation\\BHP;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.3.5\\helpers\\third_party\\thriftpy;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.3.5\\helpers\\pydev;C:\\Users\\bortiz\\.PyCharmCE2018.3\\system\\cythonExtensions;C:/Users/bortiz/ProCloud/CloudStation/BHP', 'PYTHONUNBUFFERED': '1', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\bortiz\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\bortiz\\AppData\\Local\\Temp', 'USERDNSDOMAIN': 'PROFICIO.COM', 'USERDOMAIN': 'PROFICIO', 'USERDOMAIN_ROAMINGPROFILE': 'PROFICIO', 'USERNAME': 'bortiz', 'USERPROFILE': 'C:\\Users\\bortiz', 'WINDIR': 'C:\\WINDOWS'})